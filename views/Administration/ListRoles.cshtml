@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@model IEnumerable<IdentityRole>
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@inject IAuthorizationService authorizationService
@{
	Layout = "~/views/shared/_Layout.cshtml";
	ViewBag.Title = "All Roles";
}

<h1>All Roles</h1>
@if(Model.Any())
{
	<a class="btn btn-primary mb-3" asp-action="CreateRole"
	asp-controller="administration">Add new role</a>
	foreach(var role in Model)
	{
		<div class="card mb-3">
			<div class="card-header">
				Role Id : @role.Id
			</div>
			<div class="card-body">
				<h5 class="card-title">@role.Name</h5>
			</div>
			<div class="card-footer">
				<form method="post" asp-action="DeleteRole" asp-route-id="@role.Id" asp-controller="Administration">
					@if ((await authorizationService.AuthorizeAsync(User,"EditRolePolicy")).Succeeded)
					{ 

						<a class="btn btn-primary" asp-action="EditRole" asp-controller="Administration" asp-route-id="@role.Id">Edit</a>

					} 

					
				

					<span id="confirmDeleteSpan_@role.Id" style="display:none;">
						<span>Are you sure want to delete?</span>
						<button type="submit" class="btn btn-danger">Yes</button>
						<a href="#" class="btn btn-primary" onclick="confirmDelete('@role.Id',false)">No</a>
					</span>

					<span id="deleteSpan_@role.Id">
						<a href="#" class="btn btn-danger" onclick="confirmDelete('@role.Id',true)">Delete</a>
					</span>

				</form>
			</div>
		</div>
	}

}
else
{
	<div class="card">
		<div class="card-header">
			No roles created yet
		</div>
		<br/>
		<div class="card-body">
			<h5 class="card-title">Use the button  below to create a role</h5>
			<a class="btn btn-primary" asp-action="CreateRole" asp-controller="administration"> Create Role</a>
		</div>
	</div>
}

@section Scripts {
	<script src="~/js/site.js"></script>
}